version: '3'
services:
  nginx:
    build: 
      context: ./nginx
      args:
        NGINX_VERSION: ${NGINX_VERSION}
    restart: always
    ports:
    - "${NGINX_HTTP_HOST_PORT}:80"
    volumes:
    - ./www:/opt/case
    - ./nginx/conf/nginx.conf:/opt/app/nginx/conf/nginx.conf
    - ./nginx/conf/conf.d:/opt/app/nginx/conf/conf.d
    networks:
      mywebnet:
        ipv4_address: ${NGINX_IPV4_ADDRESS}
    links:
    - php
    container_name: ${NGINX_CONTAINER_NAME}

  php:
    build: 
      context: ./php
      args:
        PHP_VERSION: ${PHP_VERSION}
    restart: always
    volumes:
    - ./www:/opt/case
    - ./php/etc/php-fpm.conf:/opt/app/php7/etc/php-fpm.conf
    - ./php/etc/php.ini:/opt/app/php7/etc/php.ini
    - ./php/etc/php-fpm.d/pool-web.conf:/opt/app/php7/etc/php-fpm.d/pool-web.conf
    networks:
      mywebnet:
        ipv4_address: ${PHP_IPV4_ADDRESS}
    container_name: ${PHP_CONTAINER_NAME}

  mysql:
      build:
        context: ./mysql
        args:
          - MYSQL_VERSION=${MYSQL_VERSION}
      environment:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - TZ=${WORKSPACE_TIMEZONE}
      volumes:
        - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
        - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        - ${MYSQL_CNF}:/etc/mysql/conf.d/my.cnf
      ports:
        - "${MYSQL_PORT}:3306"
      networks:
        mywebnet:
          ipv4_address: ${MYSQL_IPV4_ADDRESS}
      container_name: ${MYSQL_CONTAINER_NAME}

  redis:
    build: 
      context: ./redis
      args:
        REDIS_VERSION: ${REDIS_VERSION}
    restart: always
    ports:
    - "${REDIS_HTTP_PORT}:6379"
    volumes:
    - ./redis/redis50/db/:/opt/app/redis50/db/
    - ./redis/redis50/etc/redis_6379.conf:/opt/app/redis50/etc/redis_6379.conf
    - ./redis/redis50/var/:/opt/app/redis50/var/
    networks:
      mywebnet:
        ipv4_address: ${REDIS_IPV4_ADDRESS}
    container_name: ${REDIS_CONTAINER_NAME}

  mongo:
    build: ./mongo
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - ${DATA_PATH_HOST}/mongo:/data/db
    networks:
      mywebnet:
        ipv4_address: ${MONGO_IPV4_ADDRESS}
    container_name: ${MONGO_CONTAINER_NAME}

  rabbitmq:
    build: ./rabbitmq
    ports:
      - "${RABBITMQ_NODE_HOST_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_HTTP_HOST_PORT}:15672"
      - "${RABBITMQ_MANAGEMENT_HTTPS_HOST_PORT}:15671"
    privileged: true
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    hostname: dnmp-rabbitmq
    volumes:
      - ${DATA_PATH_HOST}/rabbitmq:/var/lib/rabbitmq
    networks:
      mywebnet:
        ipv4_address: ${RABBITMQ_IPV4_ADDRESS}
    container_name: ${RABBITMQ_CONTAINER_NAME}

networks:
  mywebnet:
    driver: bridge
    ipam:
      config:
      - subnet: ${SUBNET}